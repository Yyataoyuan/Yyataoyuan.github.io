(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{379:function(n,a,e){"use strict";e.r(a);var t=e(42),i=Object(t.a)({},(function(){var n=this.$createElement,a=this._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[this._v("1. 语言相关\n1.1 Java\n核心知识点\nJava的类加载机制\nJVM相关：JVM内存模型和结构,GC原理,性能调优\n泛型\n集合体系\n异常体系\nIO体系\n多线程编程\n反射\nServlet\n推荐数据\n《Java编程思想》\n《Effective Java》\n《深入理解Java虚拟机》\n\n1.2 Shell、Python等脚本语言\n介绍\n此类脚本语言的意义在于辅助后端开发，包括系统运维，工具集成\n（借助管道、重定向），文本处理，数据计算等工作，提升后端工作效率\n核心知识点（Shell）\n常用的linux操作和运维命令\n管道、重定向\nawk、sed等文本处理工具\n推荐书籍\n《linux与unix shell编程指南》\n《鸟哥的Linux私房菜》\n《Python编程 从入门到实践》\n\n\n1.3 SQL 语言\n介绍\n通用于传统关系型数据库和大数据场景的结构化查询模型语言。\n传统数据库方面要精通mysql的sql语法；大数据场景主要掌握\nHive SQL（Impala和Spark SQL等均在兼容Hive SQL）\n核心知识点\n区分DDL和DML\n经典查询语句主要结构\n表连接（内连接，左外连接，右外连接，全连接）\n函数（普通函数，聚合函数）\n索引\n分区\n适用场景\n传统数据库，传统SQL：用于事务性数据操作，通常用于系统的业务库；\n大数据场景下的SQL：用于数据分析，交互式查询，批量数据处理等。\n推荐书籍\nMySQL：《高性能MySQL》\nHive SQL：《Hive编程指南》\n\n2. 开发工具\n\n2.1 开发IDE Intellij/Eclipse\n核心知识点\n配置良好代码风格模板，包括文件注释，类注释，方法注释，缩进换行等\n安装使用必要的插件：代码规范检查插件(Alibaba Java Coding Guidelines)，源码潜在bug\n检查插件(pmd）,字节码潜在bug检查插件（findbugs）等\n\n2.2 工程构建 MAVEN\n\n核心知识点\nmaven 仓库\nmaven pom.xml文件配置\nmaven 构建的生命周期\nmaven 插件\n能力要求\n学会配置maven多级工程结构\n能够解决工程构建中常常出现的jar包冲突等问题\n熟练使用maven\n推荐书籍\n《Maven实战》\n\n2.3 版本管理 GIT\n介绍\ngit是一个开源的分布式版本控制系统，通过规范化的工具和流程\n，使得开发者之间高效协同，保持产品稳定运行\n推荐文章\nGit && Git Flow 使用总结\n\n3. 开发/测试框架\n3.1 Spring框架体系 Spring MVC/Spring Boot\n核心知识点\nSpring框架的模块组成\nIOC和AOP的设计思想和实现原理\nBean的作用域和生命周期\n参考说明\n有条件地阅读spring核心模块的代码，debug Spring框架的启动\n和Bean服务的过程是比较好的理解spring原理的方式\n最新的版本更新和参考文档可以直接浏览 Spring官网\n\n3.2 orm框架 mybatis/hibernate\nmybatis介绍\n持久层框架，通过xml映射的方式，使得开发者主要关心sql实现即可，\n由框架实现从实体到java类的映射，数据访问层服务实现，访问优化等等\n核心知识点\n熟练配置使用mybatis，掌握mapper xml的写法\n会使用mybatis-generator的mvn插件自动生成DAO层代码和xml配置\n理解mybatis的一、二级缓存,了解sql session创建过程和sql执行过程\n推荐资料\n最新的版本更新和参考文档可以直接浏览 Mybatis官网\n\n3.3 测试框架 Junit/TestNG\n核心能力要求\n熟练使用Junit/TestNG进行单元测试，接口测试\n学会借助Mockito解决外部系统，模块依赖的mock测试\n学会使用maven的surfire plugin和jacoco plugin等插件，度量测例的通过率，\n测试代码覆盖率等指标\n\n4. 服务端中间件\n\n4.1 key-value存储系统\n典型：redis/memcache\n核心知识点\nredis配置策略（持久化策略，替换算法等）\nredis的部署模式（standalone单机,sentinel哨兵,cluster集群），哨兵的本质是主从切换，\ncluster是真正的分布式部署可以线性扩展内存资源\nredis支持的数据结构\n适用场景\n分布式session存储，数据缓存，分布式锁，简单的消息队列，计数器（累加器）\n\n4.2 消息队列\n典型：rabbitmq/kafka\n核心知识\nAMQP协议对应消息模型中的主要概念\n两种集群模式对比：普通集群和镜像集群(HA)\nkafka\n基于zk的分布式拓扑结构\n理解kafka支持的消息的写入流程，写入模式，消息的存储模式，消息的消费方式等\nrabbitmq\n适用场景\n消息中间件一般适用于：系统之间需要高度解耦；异步传输数据（非阻塞）；\n保证数据传输过程中数据可以持久化，解决生产端和消费端能力不一致的问题，\n避免峰值数据对下游服务节点的冲击等\n对比rabbitmq和kafka: rabbitmq主要适用数据可靠性，一致性要求比较高的场景；\nkafka主要适用数据吞吐量比较的场景，如日志数据的实时传输等\n\n4.3 分布式文件存储\n典型：网易nos/阿里云oss\n适用场景\n存储需要在分布式架构下共享的文件对象：如前端静态文件，图片资源，大文件资源等\n4.4 服务治理/RPC框架\n典型：阿里dubbo\n核心知识点\n注册中心，服务注册、服务发现、负载均衡、序列化、反序列化、编码、解码等核心概念\n适用场景\n在相对复杂的应用服务网络中，扮演服务治理，服务解耦，负责均衡，简化服务调用方式的作用\n4.5 Java Web容器\n典型：tomcat/jetty等\n介绍\n本质上是一个servlet容器，即可以在其上运行Java Web的应用程序\n\n4.6 Nginx\n介绍\nnginx本质上是一个的HTTP和反向代理服务器\n适用场景\nhttp服务器，反向代理，软负载均衡器等\n\n4.7 关系型数据库\n典型： MYSQL/ORACLE\n核心知识点\n索引\n事务与事务隔离级别\n存储方法\n触发器不\n同关系型数据库的SQL差异\n推荐书籍\n《高性能MySQL》\n《Oracle从入门到精通》\n\n5. 大数据存储和计算框架等\n核心能力要求\n了解大数据体系整体的框架、组成\n熟悉各种大数据存储，计算框架，查询引擎等主要的架构、功能和适用场景\n能够在项目的架构过程中进行合理的大数据技术方案选型\n\n6. 其他\n\n6.1 权限相关\n介绍：  \n* 权限相关涉及到：身份认证，鉴权，权限管理等\n核心知识点：\nRBAC（基于角色的权限控制）模型\n理解OAuth 2.0的设计思想和运行流程\n6.2 安全相关\n介绍\n在后端开发中需要关注很多的安全问题，这些安全问题可能来自恶意的攻击，\n也可能来自系统本身的安全性和健壮性不足。防止应用安全漏洞产生的\n前提是理解常见的漏洞概念、原理以及产生的原因\n核心知识点\n水平权限和垂直权限漏洞，以及在程序开发中怎样避免\nSQL注入攻击（mybatis预编译可以避免）\n常用的限流策略\nCSRF 攻击\nXSS 攻击\n\n6.3 日志相关\n核心知识点\nLog4j、Logback、SLF4J之间的关系，应用中不可直接使用日志系统（Log4j、Logback）中的API，\n而应依赖使用日志框架SLF4J中的API\n日志的等级（error/warn/info/debug）\n日志的保留时间\n\n6.4 异常处理相关\n核心知识点\n异常的分类，正确区分异常处理方式\n异常处理原则\n学会借助spring框架等，将异常转为对用户或者调用方更加友好的错误码和错误信息\n\n6.5 RestFul接口设计相关\n介绍\nrestful在目前是使用较多的接口设计和服务间依赖http接口设计的主要原则，\n基于良好的约定规范，可以使得接口简单易懂，提高团队协作的效率\n推荐文章\nRESTful API 设计指南\n6.6 线上问题排查流程和工具\n核心知识点\n系统问题排查：学会使用w/uptime、top、df、netstat、iostat以及各种可视化监控工具排查\n本机的负载、磁盘、内存、网络等系统问题\n应用问题排查：学会依据应用系统错误日志以及jps、jinfo、jstat、jstack、jmap以及各种\n可视化监控工具，排查应用系统问题\n数据库问题排查：学会借助mysql慢查询日志、explain以及各种可视化工具排查mysql使用过程中\n的各种问题\n网络问题排查：学会借助telnet、ping、wget、nc等工具排查网络问题\n\n6.7 多线程编程\n核心知识点\nJava线程相关接口和类的实现和关系\nJava线程池\n线程同步，锁等\n\n6.8 网络相关\n核心知识点\n掌握http协议消息体划分、连接和通信过程\n掌握http主要的返回状态码意义\n掌握https协议的连接和通信过程\n\n6.9 设计原则和设计模式\n核心知识点\n单例模式\n策略模式\n代理模式\n观察者模式\n装饰模式\n适配器模式\n组合模式\n工厂模式\n模板方法模式\n...\n单一职责原则\n里氏替换原则\n依赖倒置原则\n接口隔离原则\n迪米特法则\n开闭原则\n组合/聚合复用原\n则七大设计原则\n一些常用的设计模式\n\n6.10 分布式系统设计相关\n核心知识点\nQuartz，基于数据库锁的抢占式分布式定时器\n基于数据库\n基于缓存\n基于zookeeper\n一致性理论\n分布式事务解决方案\n一致性模型\nCAP定理\nBASE 理论\n强一致性\n弱一致性\n最终一致性\neBay 事件队列方案\nTCC （Try-Confirm-Cancel）补偿模式\n缓存数据最终一致性\n强一致性（两段提交和三段提交模型, Paxos或者Raft算法）\n最终一致性\nSOA\n微服务\nServless\n分布式系统架构设计\n分布式事务\n分布式锁\n分布式定时器")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);